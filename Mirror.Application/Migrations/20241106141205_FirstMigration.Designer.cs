// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mirror.Application.DatabaseContext;

#nullable disable

namespace Mirror.Application.Migrations
{
    [DbContext(typeof(MirrorContext))]
    [Migration("20241106141205_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mirror.Domain.Entities.Progress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<string>("ProgressName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "progressName");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Progresses");

                    b.HasAnnotation("Relational:JsonPropertyName", "progress");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89e39006-abb0-4d6c-a045-e36a1aa4c62e"),
                            Description = "Cutting body fat",
                            ProgressName = "Weight",
                            UserId = new Guid("36165a94-1a9c-43dd-bf13-97a4e61e8b89")
                        },
                        new
                        {
                            Id = new Guid("42f99827-ca6e-4f5b-a31f-a99458c2e344"),
                            Description = "Training to Marathon",
                            ProgressName = "Time",
                            UserId = new Guid("6d3080d4-5dbf-4549-8ac1-77713785de2a")
                        });
                });

            modelBuilder.Entity("Mirror.Domain.Entities.ProgressValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("ProgressColumnHead")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "progressColumnHead");

                    b.Property<string>("ProgressColumnValue")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "column-value");

                    b.Property<int>("ProgressDate_Day")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "day");

                    b.Property<int>("ProgressDate_Month")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "month");

                    b.Property<int>("ProgressDate_Year")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.Property<Guid>("ProgressId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProgressId");

                    b.ToTable("ProgressValues");

                    b.HasAnnotation("Relational:JsonPropertyName", "progressValues");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35cb12b5-9441-4c0f-8360-5b9d6082cda3"),
                            ProgressColumnHead = "Weight",
                            ProgressColumnValue = "71",
                            ProgressDate_Day = 6,
                            ProgressDate_Month = 8,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("89e39006-abb0-4d6c-a045-e36a1aa4c62e")
                        },
                        new
                        {
                            Id = new Guid("c38f98c3-682d-49d0-8b20-d7b40e015a74"),
                            ProgressColumnHead = "Weight",
                            ProgressColumnValue = "72",
                            ProgressDate_Day = 10,
                            ProgressDate_Month = 8,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("89e39006-abb0-4d6c-a045-e36a1aa4c62e")
                        },
                        new
                        {
                            Id = new Guid("593b9f57-c5bc-4b92-b444-9ea14301b60c"),
                            ProgressColumnHead = "Weight",
                            ProgressColumnValue = "73",
                            ProgressDate_Day = 12,
                            ProgressDate_Month = 8,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("89e39006-abb0-4d6c-a045-e36a1aa4c62e")
                        },
                        new
                        {
                            Id = new Guid("aedc3655-901c-4689-9d9a-a3c0387e329b"),
                            ProgressColumnHead = "Time",
                            ProgressColumnValue = "25:17",
                            ProgressDate_Day = 5,
                            ProgressDate_Month = 1,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("42f99827-ca6e-4f5b-a31f-a99458c2e344")
                        },
                        new
                        {
                            Id = new Guid("ceafc64d-6248-43d2-904b-8f37b7885eae"),
                            ProgressColumnHead = "Time",
                            ProgressColumnValue = "26:18",
                            ProgressDate_Day = 10,
                            ProgressDate_Month = 1,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("42f99827-ca6e-4f5b-a31f-a99458c2e344")
                        },
                        new
                        {
                            Id = new Guid("75b8809b-827f-4f1c-9fa4-d81b5eedcc57"),
                            ProgressColumnHead = "Time",
                            ProgressColumnValue = "24:05",
                            ProgressDate_Day = 15,
                            ProgressDate_Month = 1,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("42f99827-ca6e-4f5b-a31f-a99458c2e344")
                        },
                        new
                        {
                            Id = new Guid("44e76a73-bdbf-48ee-9b20-73a4082a2624"),
                            ProgressColumnHead = "Time",
                            ProgressColumnValue = "27:18",
                            ProgressDate_Day = 20,
                            ProgressDate_Month = 1,
                            ProgressDate_Year = 2024,
                            ProgressId = new Guid("42f99827-ca6e-4f5b-a31f-a99458c2e344")
                        });
                });

            modelBuilder.Entity("Mirror.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "password");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36165a94-1a9c-43dd-bf13-97a4e61e8b89"),
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "hashedpassword123"
                        },
                        new
                        {
                            Id = new Guid("6d3080d4-5dbf-4549-8ac1-77713785de2a"),
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "hashedpassword456"
                        });
                });

            modelBuilder.Entity("Mirror.Domain.Entities.Progress", b =>
                {
                    b.HasOne("Mirror.Domain.Entities.User", "User")
                        .WithMany("Progresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mirror.Domain.Entities.ProgressValue", b =>
                {
                    b.HasOne("Mirror.Domain.Entities.Progress", "Progress")
                        .WithMany("ProgressValue")
                        .HasForeignKey("ProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Progress");
                });

            modelBuilder.Entity("Mirror.Domain.Entities.Progress", b =>
                {
                    b.Navigation("ProgressValue");
                });

            modelBuilder.Entity("Mirror.Domain.Entities.User", b =>
                {
                    b.Navigation("Progresses");
                });
#pragma warning restore 612, 618
        }
    }
}
